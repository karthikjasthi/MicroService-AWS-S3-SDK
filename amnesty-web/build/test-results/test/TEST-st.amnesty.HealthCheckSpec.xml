<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="st.amnesty.HealthCheckSpec" tests="1" skipped="0" failures="0" errors="0" timestamp="2018-04-17T15:43:26" hostname="STCADMINs-MacBook-Pro.local" time="0.778">
  <properties/>
  <testcase name="health check" classname="st.amnesty.HealthCheckSpec" time="0.778"/>
  <system-out><![CDATA[time=10:43:26.131, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.ContainerLifeCycle, message=wiremock.org.eclipse.jetty.server.Server@3a1ccde0 added {qtp1349198170{STOPPED,8<=0<=10,i=0,q=0},AUTO}
time=10:43:26.131, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.ContainerLifeCycle, message=HttpConnectionFactory@707ba596{HTTP/1.1} added {HttpConfiguration@3fdffca1{32768/8192,8192/8192,https://:0,[]},POJO}
time=10:43:26.131, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.ContainerLifeCycle, message=NetworkTrafficServerConnector@6a18c31a{null}{0.0.0.0:0} added {wiremock.org.eclipse.jetty.server.Server@3a1ccde0,UNMANAGED}
time=10:43:26.134, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.ContainerLifeCycle, message=NetworkTrafficServerConnector@6a18c31a{null}{0.0.0.0:0} added {qtp1349198170{STOPPED,8<=0<=10,i=0,q=0},AUTO}
time=10:43:26.135, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.ContainerLifeCycle, message=NetworkTrafficServerConnector@6a18c31a{null}{0.0.0.0:0} added {wiremock.org.eclipse.jetty.util.thread.ScheduledExecutorScheduler@36377bf1,AUTO}
time=10:43:26.135, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.ContainerLifeCycle, message=NetworkTrafficServerConnector@6a18c31a{null}{0.0.0.0:0} added {wiremock.org.eclipse.jetty.io.ArrayByteBufferPool@47628cda,POJO}
time=10:43:26.135, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.ContainerLifeCycle, message=NetworkTrafficServerConnector@6a18c31a{null}{0.0.0.0:0} added {HttpConnectionFactory@707ba596{HTTP/1.1},AUTO}
time=10:43:26.135, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.ContainerLifeCycle, message=NetworkTrafficServerConnector@6a18c31a{HTTP/1.1}{0.0.0.0:0} added {wiremock.org.eclipse.jetty.server.ServerConnector$ServerConnectorManager@7184a63,MANAGED}
time=10:43:26.135, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.ContainerLifeCycle, message=wiremock.org.eclipse.jetty.server.Server@3a1ccde0 added {NetworkTrafficServerConnector@6a18c31a{HTTP/1.1}{0.0.0.0:0},AUTO}
time=10:43:26.136, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.ContainerLifeCycle, message=wiremock.org.eclipse.jetty.server.Server@3a1ccde0 added {w.o.e.j.s.ServletContextHandler@a7d5182{/__admin,null,null},AUTO}
time=10:43:26.136, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.ContainerLifeCycle, message=w.o.e.j.s.ServletContextHandler@a7d5182{/__admin,null,null} added {wiremock.org.eclipse.jetty.servlet.ServletHandler@26d153c4,AUTO}
time=10:43:26.136, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.ContainerLifeCycle, message=wiremock.org.eclipse.jetty.servlet.ServletHandler@26d153c4 added {wiremock.org.eclipse.jetty.servlet.DefaultServlet-75860f98@2956beb1==wiremock.org.eclipse.jetty.servlet.DefaultServlet,-1,false,AUTO}
time=10:43:26.136, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.ContainerLifeCycle, message=wiremock.org.eclipse.jetty.servlet.ServletHandler@26d153c4 added {[/swagger-ui/*]=>wiremock.org.eclipse.jetty.servlet.DefaultServlet-75860f98,POJO}
time=10:43:26.136, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.ContainerLifeCycle, message=wiremock.org.eclipse.jetty.servlet.ServletHandler@26d153c4 added {com.github.tomakehurst.wiremock.servlet.WireMockHandlerDispatchingServlet-30081819@5085e302==com.github.tomakehurst.wiremock.servlet.WireMockHandlerDispatchingServlet,-1,false,AUTO}
time=10:43:26.136, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.ContainerLifeCycle, message=wiremock.org.eclipse.jetty.servlet.ServletHandler@26d153c4 added {[/]=>com.github.tomakehurst.wiremock.servlet.WireMockHandlerDispatchingServlet-30081819,POJO}
time=10:43:26.136, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.ContainerLifeCycle, message=wiremock.org.eclipse.jetty.servlet.ServletHandler@26d153c4 added {wiremock.org.eclipse.jetty.servlets.CrossOriginFilter-5099bedb,AUTO}
time=10:43:26.136, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.ContainerLifeCycle, message=wiremock.org.eclipse.jetty.servlet.ServletHandler@26d153c4 added {[/*]/[]==1=>wiremock.org.eclipse.jetty.servlets.CrossOriginFilter-5099bedb,POJO}
time=10:43:26.136, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.ContainerLifeCycle, message=wiremock.org.eclipse.jetty.server.Server@3a1ccde0 added {w.o.e.j.s.ServletContextHandler@7c7a987f{/,null,null},AUTO}
time=10:43:26.136, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.ContainerLifeCycle, message=w.o.e.j.s.ServletContextHandler@7c7a987f{/,null,null} added {wiremock.org.eclipse.jetty.servlet.ServletHandler@39c5a2a7,AUTO}
time=10:43:26.136, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.ContainerLifeCycle, message=wiremock.org.eclipse.jetty.servlet.ServletHandler@39c5a2a7 added {wiremock.org.eclipse.jetty.servlet.DefaultServlet-49fdbd56@1669fd66==wiremock.org.eclipse.jetty.servlet.DefaultServlet,-1,false,AUTO}
time=10:43:26.136, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.ContainerLifeCycle, message=wiremock.org.eclipse.jetty.servlet.ServletHandler@39c5a2a7 added {[/__files/*]=>wiremock.org.eclipse.jetty.servlet.DefaultServlet-49fdbd56,POJO}
time=10:43:26.137, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.ContainerLifeCycle, message=wiremock.org.eclipse.jetty.servlet.ServletHandler@39c5a2a7 added {com.github.tomakehurst.wiremock.servlet.WireMockHandlerDispatchingServlet-548fadd4@426a50e==com.github.tomakehurst.wiremock.servlet.WireMockHandlerDispatchingServlet,-1,false,AUTO}
time=10:43:26.137, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.ContainerLifeCycle, message=wiremock.org.eclipse.jetty.servlet.ServletHandler@39c5a2a7 added {[/]=>com.github.tomakehurst.wiremock.servlet.WireMockHandlerDispatchingServlet-548fadd4,POJO}
time=10:43:26.137, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.ContainerLifeCycle, message=wiremock.org.eclipse.jetty.servlet.ServletHandler@39c5a2a7 added {wiremock.org.eclipse.jetty.servlets.GzipFilter-7c9e6e5a,AUTO}
time=10:43:26.137, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.ContainerLifeCycle, message=wiremock.org.eclipse.jetty.servlet.ServletHandler@39c5a2a7 added {[/*]/[]==3=>wiremock.org.eclipse.jetty.servlets.GzipFilter-7c9e6e5a,POJO}
time=10:43:26.137, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.ContainerLifeCycle, message=wiremock.org.eclipse.jetty.servlet.ServletHandler@39c5a2a7 added {com.github.tomakehurst.wiremock.servlet.ContentTypeSettingFilter-685a2bf4,AUTO}
time=10:43:26.137, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.ContainerLifeCycle, message=wiremock.org.eclipse.jetty.servlet.ServletHandler@39c5a2a7 added {[/__files/*]/[]==2=>com.github.tomakehurst.wiremock.servlet.ContentTypeSettingFilter-685a2bf4,POJO}
time=10:43:26.137, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.ContainerLifeCycle, message=wiremock.org.eclipse.jetty.servlet.ServletHandler@39c5a2a7 added {com.github.tomakehurst.wiremock.servlet.TrailingSlashFilter-4c693ca4,AUTO}
time=10:43:26.137, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.ContainerLifeCycle, message=wiremock.org.eclipse.jetty.servlet.ServletHandler@39c5a2a7 added {[/__files/*]/[]==31=>com.github.tomakehurst.wiremock.servlet.TrailingSlashFilter-4c693ca4,POJO}
time=10:43:26.139, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.ContainerLifeCycle, message=wiremock.org.eclipse.jetty.server.handler.HandlerCollection@6521d9f0[w.o.e.j.s.ServletContextHandler@a7d5182{/__admin,null,null}, w.o.e.j.s.ServletContextHandler@7c7a987f{/,null,null}] added {w.o.e.j.s.ServletContextHandler@a7d5182{/__admin,null,null},AUTO}
time=10:43:26.139, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.ContainerLifeCycle, message=wiremock.org.eclipse.jetty.server.handler.HandlerCollection@6521d9f0[w.o.e.j.s.ServletContextHandler@a7d5182{/__admin,null,null}, w.o.e.j.s.ServletContextHandler@7c7a987f{/,null,null}] added {w.o.e.j.s.ServletContextHandler@7c7a987f{/,null,null},AUTO}
time=10:43:26.140, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.ContainerLifeCycle, message=wiremock.org.eclipse.jetty.server.Server@3a1ccde0 added {wiremock.org.eclipse.jetty.server.handler.HandlerCollection@6521d9f0[w.o.e.j.s.ServletContextHandler@a7d5182{/__admin,null,null}, w.o.e.j.s.ServletContextHandler@7c7a987f{/,null,null}],AUTO}
time=10:43:26.140, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=starting wiremock.org.eclipse.jetty.server.Server@3a1ccde0
time=10:43:26.140, loggingId=, level=INFO , logger=w.org.eclipse.jetty.server.Server, message=jetty-9.2.z-SNAPSHOT
time=10:43:26.141, loggingId=, level=DEBUG, logger=w.o.e.j.s.handler.AbstractHandler, message=starting wiremock.org.eclipse.jetty.server.Server@3a1ccde0
time=10:43:26.141, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=starting qtp1349198170{STOPPED,8<=0<=10,i=0,q=0}
time=10:43:26.141, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=STARTED @26441ms qtp1349198170{STARTED,8<=8<=10,i=7,q=0}
time=10:43:26.142, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=starting wiremock.org.eclipse.jetty.server.handler.HandlerCollection@6521d9f0[w.o.e.j.s.ServletContextHandler@a7d5182{/__admin,null,null}, w.o.e.j.s.ServletContextHandler@7c7a987f{/,null,null}]
time=10:43:26.142, loggingId=, level=DEBUG, logger=w.o.e.j.s.handler.AbstractHandler, message=starting wiremock.org.eclipse.jetty.server.handler.HandlerCollection@6521d9f0[w.o.e.j.s.ServletContextHandler@a7d5182{/__admin,null,null}, w.o.e.j.s.ServletContextHandler@7c7a987f{/,null,null}]
time=10:43:26.142, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=starting w.o.e.j.s.ServletContextHandler@a7d5182{/__admin,null,null}
time=10:43:26.142, loggingId=, level=DEBUG, logger=w.o.e.j.s.handler.AbstractHandler, message=starting w.o.e.j.s.ServletContextHandler@a7d5182{/__admin,null,STARTING}
time=10:43:26.142, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=starting wiremock.org.eclipse.jetty.servlet.ServletHandler@26d153c4
time=10:43:26.142, loggingId=, level=DEBUG, logger=w.o.e.jetty.servlet.ServletHandler, message=Chose path=/swagger-ui/* mapped to servlet=wiremock.org.eclipse.jetty.servlet.DefaultServlet-75860f98 from default=false
time=10:43:26.142, loggingId=, level=DEBUG, logger=w.o.e.jetty.servlet.ServletHandler, message=Chose path=/ mapped to servlet=com.github.tomakehurst.wiremock.servlet.WireMockHandlerDispatchingServlet-30081819 from default=false
time=10:43:26.142, loggingId=, level=DEBUG, logger=w.o.e.jetty.servlet.ServletHandler, message=filterNameMap={wiremock.org.eclipse.jetty.servlets.CrossOriginFilter-5099bedb=wiremock.org.eclipse.jetty.servlets.CrossOriginFilter-5099bedb}
time=10:43:26.142, loggingId=, level=DEBUG, logger=w.o.e.jetty.servlet.ServletHandler, message=pathFilters=[[/*]/[]==1=>wiremock.org.eclipse.jetty.servlets.CrossOriginFilter-5099bedb]
time=10:43:26.142, loggingId=, level=DEBUG, logger=w.o.e.jetty.servlet.ServletHandler, message=servletFilterMap={}
time=10:43:26.142, loggingId=, level=DEBUG, logger=w.o.e.jetty.servlet.ServletHandler, message=servletPathMap={/swagger-ui/*=wiremock.org.eclipse.jetty.servlet.DefaultServlet-75860f98@2956beb1==wiremock.org.eclipse.jetty.servlet.DefaultServlet,-1,false, /=com.github.tomakehurst.wiremock.servlet.WireMockHandlerDispatchingServlet-30081819@5085e302==com.github.tomakehurst.wiremock.servlet.WireMockHandlerDispatchingServlet,-1,false}
time=10:43:26.143, loggingId=, level=DEBUG, logger=w.o.e.jetty.servlet.ServletHandler, message=servletNameMap={wiremock.org.eclipse.jetty.servlet.DefaultServlet-75860f98=wiremock.org.eclipse.jetty.servlet.DefaultServlet-75860f98@2956beb1==wiremock.org.eclipse.jetty.servlet.DefaultServlet,-1,false, com.github.tomakehurst.wiremock.servlet.WireMockHandlerDispatchingServlet-30081819=com.github.tomakehurst.wiremock.servlet.WireMockHandlerDispatchingServlet-30081819@5085e302==com.github.tomakehurst.wiremock.servlet.WireMockHandlerDispatchingServlet,-1,false}
time=10:43:26.143, loggingId=, level=DEBUG, logger=w.o.e.j.s.handler.AbstractHandler, message=starting wiremock.org.eclipse.jetty.servlet.ServletHandler@26d153c4
time=10:43:26.143, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=STARTED @26442ms wiremock.org.eclipse.jetty.servlet.ServletHandler@26d153c4
time=10:43:26.144, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=starting wiremock.org.eclipse.jetty.servlets.CrossOriginFilter-5099bedb
time=10:43:26.144, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=STARTED @26443ms wiremock.org.eclipse.jetty.servlets.CrossOriginFilter-5099bedb
time=10:43:26.144, loggingId=, level=DEBUG, logger=w.o.e.jetty.servlet.FilterHolder, message=Filter.init wiremock.org.eclipse.jetty.servlets.CrossOriginFilter@56779e40
time=10:43:26.144, loggingId=, level=DEBUG, logger=w.o.e.j.servlets.CrossOriginFilter, message=Cross-origin filter configuration: allowedOrigins = *, allowedMethods = OPTIONS,GET,POST,PUT,PATCH,DELETE, allowedHeaders = X-Requested-With,Content-Type,Accept,Origin,Authorization, preflightMaxAge = 1800, allowCredentials = true,exposedHeaders = ,chainPreflight = false
time=10:43:26.144, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=starting com.github.tomakehurst.wiremock.servlet.WireMockHandlerDispatchingServlet-30081819@5085e302==com.github.tomakehurst.wiremock.servlet.WireMockHandlerDispatchingServlet,-1,false
time=10:43:26.144, loggingId=, level=DEBUG, logger=w.o.eclipse.jetty.servlet.BaseHolder, message=Holding class com.github.tomakehurst.wiremock.servlet.WireMockHandlerDispatchingServlet from sun.misc.Launcher$AppClassLoader@2a139a55
time=10:43:26.144, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=STARTED @26443ms com.github.tomakehurst.wiremock.servlet.WireMockHandlerDispatchingServlet-30081819@5085e302==com.github.tomakehurst.wiremock.servlet.WireMockHandlerDispatchingServlet,-1,false
time=10:43:26.144, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=starting wiremock.org.eclipse.jetty.servlet.DefaultServlet-75860f98@2956beb1==wiremock.org.eclipse.jetty.servlet.DefaultServlet,-1,false
time=10:43:26.145, loggingId=, level=DEBUG, logger=w.o.eclipse.jetty.servlet.BaseHolder, message=Holding class wiremock.org.eclipse.jetty.servlet.DefaultServlet from sun.misc.Launcher$AppClassLoader@2a139a55
time=10:43:26.145, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=STARTED @26444ms wiremock.org.eclipse.jetty.servlet.DefaultServlet-75860f98@2956beb1==wiremock.org.eclipse.jetty.servlet.DefaultServlet,-1,false
time=10:43:26.145, loggingId=, level=INFO , logger=w.o.e.j.s.handler.ContextHandler, message=Started w.o.e.j.s.ServletContextHandler@a7d5182{/__admin,null,AVAILABLE}
time=10:43:26.145, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=STARTED @26444ms w.o.e.j.s.ServletContextHandler@a7d5182{/__admin,null,AVAILABLE}
time=10:43:26.145, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=starting w.o.e.j.s.ServletContextHandler@7c7a987f{/,null,null}
time=10:43:26.145, loggingId=, level=DEBUG, logger=w.o.e.j.s.handler.AbstractHandler, message=starting w.o.e.j.s.ServletContextHandler@7c7a987f{/,null,STARTING}
time=10:43:26.145, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=starting wiremock.org.eclipse.jetty.servlet.ServletHandler@39c5a2a7
time=10:43:26.145, loggingId=, level=DEBUG, logger=w.o.e.jetty.servlet.ServletHandler, message=Chose path=/__files/* mapped to servlet=wiremock.org.eclipse.jetty.servlet.DefaultServlet-49fdbd56 from default=false
time=10:43:26.145, loggingId=, level=DEBUG, logger=w.o.e.jetty.servlet.ServletHandler, message=Chose path=/ mapped to servlet=com.github.tomakehurst.wiremock.servlet.WireMockHandlerDispatchingServlet-548fadd4 from default=false
time=10:43:26.145, loggingId=, level=DEBUG, logger=w.o.e.jetty.servlet.ServletHandler, message=filterNameMap={com.github.tomakehurst.wiremock.servlet.ContentTypeSettingFilter-685a2bf4=com.github.tomakehurst.wiremock.servlet.ContentTypeSettingFilter-685a2bf4, com.github.tomakehurst.wiremock.servlet.TrailingSlashFilter-4c693ca4=com.github.tomakehurst.wiremock.servlet.TrailingSlashFilter-4c693ca4, wiremock.org.eclipse.jetty.servlets.GzipFilter-7c9e6e5a=wiremock.org.eclipse.jetty.servlets.GzipFilter-7c9e6e5a}
time=10:43:26.146, loggingId=, level=DEBUG, logger=w.o.e.jetty.servlet.ServletHandler, message=pathFilters=[[/*]/[]==3=>wiremock.org.eclipse.jetty.servlets.GzipFilter-7c9e6e5a, [/__files/*]/[]==2=>com.github.tomakehurst.wiremock.servlet.ContentTypeSettingFilter-685a2bf4, [/__files/*]/[]==31=>com.github.tomakehurst.wiremock.servlet.TrailingSlashFilter-4c693ca4]
time=10:43:26.146, loggingId=, level=DEBUG, logger=w.o.e.jetty.servlet.ServletHandler, message=servletFilterMap={}
time=10:43:26.146, loggingId=, level=DEBUG, logger=w.o.e.jetty.servlet.ServletHandler, message=servletPathMap={/__files/*=wiremock.org.eclipse.jetty.servlet.DefaultServlet-49fdbd56@1669fd66==wiremock.org.eclipse.jetty.servlet.DefaultServlet,-1,false, /=com.github.tomakehurst.wiremock.servlet.WireMockHandlerDispatchingServlet-548fadd4@426a50e==com.github.tomakehurst.wiremock.servlet.WireMockHandlerDispatchingServlet,-1,false}
time=10:43:26.146, loggingId=, level=DEBUG, logger=w.o.e.jetty.servlet.ServletHandler, message=servletNameMap={com.github.tomakehurst.wiremock.servlet.WireMockHandlerDispatchingServlet-548fadd4=com.github.tomakehurst.wiremock.servlet.WireMockHandlerDispatchingServlet-548fadd4@426a50e==com.github.tomakehurst.wiremock.servlet.WireMockHandlerDispatchingServlet,-1,false, wiremock.org.eclipse.jetty.servlet.DefaultServlet-49fdbd56=wiremock.org.eclipse.jetty.servlet.DefaultServlet-49fdbd56@1669fd66==wiremock.org.eclipse.jetty.servlet.DefaultServlet,-1,false}
time=10:43:26.146, loggingId=, level=DEBUG, logger=w.o.e.j.s.handler.AbstractHandler, message=starting wiremock.org.eclipse.jetty.servlet.ServletHandler@39c5a2a7
time=10:43:26.147, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=STARTED @26446ms wiremock.org.eclipse.jetty.servlet.ServletHandler@39c5a2a7
time=10:43:26.147, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=starting wiremock.org.eclipse.jetty.servlets.GzipFilter-7c9e6e5a
time=10:43:26.147, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=STARTED @26446ms wiremock.org.eclipse.jetty.servlets.GzipFilter-7c9e6e5a
time=10:43:26.148, loggingId=, level=DEBUG, logger=w.o.e.jetty.servlet.FilterHolder, message=Filter.init wiremock.org.eclipse.jetty.servlets.GzipFilter@608aa2fb
time=10:43:26.148, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=starting com.github.tomakehurst.wiremock.servlet.ContentTypeSettingFilter-685a2bf4
time=10:43:26.148, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=STARTED @26447ms com.github.tomakehurst.wiremock.servlet.ContentTypeSettingFilter-685a2bf4
time=10:43:26.148, loggingId=, level=DEBUG, logger=w.o.e.jetty.servlet.FilterHolder, message=Filter.init com.github.tomakehurst.wiremock.servlet.ContentTypeSettingFilter@a65b534
time=10:43:26.148, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=starting com.github.tomakehurst.wiremock.servlet.TrailingSlashFilter-4c693ca4
time=10:43:26.148, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=STARTED @26448ms com.github.tomakehurst.wiremock.servlet.TrailingSlashFilter-4c693ca4
time=10:43:26.149, loggingId=, level=DEBUG, logger=w.o.e.jetty.servlet.FilterHolder, message=Filter.init com.github.tomakehurst.wiremock.servlet.TrailingSlashFilter@26225454
time=10:43:26.149, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=starting com.github.tomakehurst.wiremock.servlet.WireMockHandlerDispatchingServlet-548fadd4@426a50e==com.github.tomakehurst.wiremock.servlet.WireMockHandlerDispatchingServlet,-1,false
time=10:43:26.149, loggingId=, level=DEBUG, logger=w.o.eclipse.jetty.servlet.BaseHolder, message=Holding class com.github.tomakehurst.wiremock.servlet.WireMockHandlerDispatchingServlet from sun.misc.Launcher$AppClassLoader@2a139a55
time=10:43:26.149, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=STARTED @26448ms com.github.tomakehurst.wiremock.servlet.WireMockHandlerDispatchingServlet-548fadd4@426a50e==com.github.tomakehurst.wiremock.servlet.WireMockHandlerDispatchingServlet,-1,false
time=10:43:26.149, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=starting wiremock.org.eclipse.jetty.servlet.DefaultServlet-49fdbd56@1669fd66==wiremock.org.eclipse.jetty.servlet.DefaultServlet,-1,false
time=10:43:26.149, loggingId=, level=DEBUG, logger=w.o.eclipse.jetty.servlet.BaseHolder, message=Holding class wiremock.org.eclipse.jetty.servlet.DefaultServlet from sun.misc.Launcher$AppClassLoader@2a139a55
time=10:43:26.149, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=STARTED @26448ms wiremock.org.eclipse.jetty.servlet.DefaultServlet-49fdbd56@1669fd66==wiremock.org.eclipse.jetty.servlet.DefaultServlet,-1,false
time=10:43:26.149, loggingId=, level=INFO , logger=w.o.e.j.s.handler.ContextHandler, message=Started w.o.e.j.s.ServletContextHandler@7c7a987f{/,null,AVAILABLE}
time=10:43:26.149, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=STARTED @26448ms w.o.e.j.s.ServletContextHandler@7c7a987f{/,null,AVAILABLE}
time=10:43:26.149, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=STARTED @26448ms wiremock.org.eclipse.jetty.server.handler.HandlerCollection@6521d9f0[w.o.e.j.s.ServletContextHandler@a7d5182{/__admin,null,AVAILABLE}, w.o.e.j.s.ServletContextHandler@7c7a987f{/,null,AVAILABLE}]
time=10:43:26.149, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=starting NetworkTrafficServerConnector@6a18c31a{HTTP/1.1}{0.0.0.0:0}
time=10:43:26.150, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.ContainerLifeCycle, message=NetworkTrafficServerConnector@6a18c31a{HTTP/1.1}{0.0.0.0:56890} added {sun.nio.ch.ServerSocketChannelImpl[/0:0:0:0:0:0:0:0:56890],POJO}
time=10:43:26.150, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=starting wiremock.org.eclipse.jetty.util.thread.ScheduledExecutorScheduler@36377bf1
time=10:43:26.150, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=STARTED @26449ms wiremock.org.eclipse.jetty.util.thread.ScheduledExecutorScheduler@36377bf1
time=10:43:26.150, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=starting HttpConnectionFactory@707ba596{HTTP/1.1}
time=10:43:26.150, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=STARTED @26449ms HttpConnectionFactory@707ba596{HTTP/1.1}
time=10:43:26.150, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=starting wiremock.org.eclipse.jetty.server.ServerConnector$ServerConnectorManager@7184a63
time=10:43:26.150, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=starting wiremock.org.eclipse.jetty.io.SelectorManager$ManagedSelector@7bedfe12 keys=-1 selected=-1
time=10:43:26.150, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=STARTED @26449ms wiremock.org.eclipse.jetty.io.SelectorManager$ManagedSelector@7bedfe12 keys=0 selected=0
time=10:43:26.150, loggingId=, level=DEBUG, logger=w.o.eclipse.jetty.io.SelectorManager, message=Starting Thread[qtp1349198170-218-selector-ServerConnectorManager@7184a63/0,5,main] on wiremock.org.eclipse.jetty.io.SelectorManager$ManagedSelector@7bedfe12 keys=0 selected=0
time=10:43:26.150, loggingId=, level=DEBUG, logger=w.o.eclipse.jetty.io.SelectorManager, message=Selector loop waiting on select
time=10:43:26.150, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=starting wiremock.org.eclipse.jetty.io.SelectorManager$ManagedSelector@4e4516ee keys=-1 selected=-1
time=10:43:26.150, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=STARTED @26450ms wiremock.org.eclipse.jetty.io.SelectorManager$ManagedSelector@4e4516ee keys=0 selected=0
time=10:43:26.150, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=STARTED @26450ms wiremock.org.eclipse.jetty.server.ServerConnector$ServerConnectorManager@7184a63
time=10:43:26.151, loggingId=, level=DEBUG, logger=w.o.eclipse.jetty.io.SelectorManager, message=Starting Thread[qtp1349198170-219-selector-ServerConnectorManager@7184a63/1,5,main] on wiremock.org.eclipse.jetty.io.SelectorManager$ManagedSelector@4e4516ee keys=0 selected=0
time=10:43:26.151, loggingId=, level=DEBUG, logger=w.o.eclipse.jetty.io.SelectorManager, message=Selector loop waiting on select
time=10:43:26.151, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.ContainerLifeCycle, message=NetworkTrafficServerConnector@6a18c31a{HTTP/1.1}{0.0.0.0:56890} added {acceptor-0@69aec607,POJO}
time=10:43:26.151, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.ContainerLifeCycle, message=NetworkTrafficServerConnector@6a18c31a{HTTP/1.1}{0.0.0.0:56890} added {acceptor-1@5d9abf92,POJO}
time=10:43:26.152, loggingId=, level=INFO , logger=w.o.e.j.s.NetworkTrafficServerConnector, message=Started NetworkTrafficServerConnector@6a18c31a{HTTP/1.1}{0.0.0.0:56890}
time=10:43:26.152, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=STARTED @26451ms NetworkTrafficServerConnector@6a18c31a{HTTP/1.1}{0.0.0.0:56890}
time=10:43:26.152, loggingId=, level=INFO , logger=w.org.eclipse.jetty.server.Server, message=Started @26451ms
time=10:43:26.152, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=STARTED @26451ms wiremock.org.eclipse.jetty.server.Server@3a1ccde0
time=10:43:26.207, loggingId=, level=INFO , logger=ratpack.server.RatpackServer, message=Starting server...
time=10:43:26.208, loggingId=, level=INFO , logger=s.ratpack.config.SmartThingsConfig, message=Loading configuration from file:/Users/karthikjasthi/Workspaces/amnesty/amnesty-web/build/resources/main/amnesty-web.yml
time=10:43:26.208, loggingId=, level=INFO , logger=s.ratpack.config.SmartThingsConfig, message=No override file found in home directory (/Users/karthikjasthi/amnesty-web.yml).
time=10:43:26.275, loggingId=, level=INFO , logger=ratpack.server.RatpackServer, message=Building registry...
time=10:43:26.338, loggingId=, level=DEBUG, logger=o.h.v.i.e.r.DefaultTraversableResolver, message=Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
time=10:43:26.338, loggingId=, level=DEBUG, logger=o.h.v.i.xml.ValidationXmlParser, message=Trying to load META-INF/validation.xml for XML based Validator configuration.
time=10:43:26.338, loggingId=, level=DEBUG, logger=o.h.v.i.xml.ResourceLoaderHelper, message=Trying to load META-INF/validation.xml via TCCL
time=10:43:26.339, loggingId=, level=DEBUG, logger=o.h.v.i.xml.ResourceLoaderHelper, message=Trying to load META-INF/validation.xml via Hibernate Validator's class loader
time=10:43:26.339, loggingId=, level=DEBUG, logger=o.h.v.i.xml.ValidationXmlParser, message=No META-INF/validation.xml found. Using annotation based configuration only.
time=10:43:26.575, loggingId=, level=DEBUG, logger=com.amazonaws.AmazonWebServiceClient, message=Internal logging successfully configured to commons logger: true
time=10:43:26.841, loggingId=, level=INFO , logger=ratpack.server.RatpackServer, message=Initializing 2 services...
time=10:43:26.844, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=PS-Scavenge.count
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:239) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.844, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=PS-Scavenge.time
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:239) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.844, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=PS-MarkSweep.count
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:239) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.845, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=PS-MarkSweep.time
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:239) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.845, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=timed_waiting.count
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:240) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.846, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=deadlock.count
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:240) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.846, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=count
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:240) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.846, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=waiting.count
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:240) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.846, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=daemon.count
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:240) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.847, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=new.count
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:240) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.847, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=blocked.count
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:240) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.848, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=deadlocks
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:240) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.848, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=runnable.count
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:240) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.848, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=terminated.count
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:240) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.849, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=heap.committed
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:241) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.849, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=non-heap.used
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:241) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.849, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=pools.Code-Cache.used
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:241) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.850, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=pools.Code-Cache.committed
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:241) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.850, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=heap.used
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:241) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.850, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=pools.PS-Old-Gen.init
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:241) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.851, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=total.committed
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:241) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.851, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=pools.PS-Old-Gen.max
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:241) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.851, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=total.init
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:241) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.852, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=non-heap.max
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:241) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.852, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=pools.PS-Eden-Space.init
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:241) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.852, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=pools.Compressed-Class-Space.used
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:241) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.853, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=pools.Metaspace.usage
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:241) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.853, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=pools.Metaspace.max
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:241) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.853, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=pools.PS-Eden-Space.committed
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:241) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.854, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=pools.PS-Eden-Space.max
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:241) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.854, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=pools.Compressed-Class-Space.usage
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:241) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.854, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=heap.usage
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:241) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.855, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=pools.PS-Eden-Space.usage
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:241) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.855, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=pools.PS-Survivor-Space.max
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:241) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.855, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=pools.Code-Cache.max
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:241) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.856, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=pools.Compressed-Class-Space.init
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:241) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.856, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=pools.Metaspace.init
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:241) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.856, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=pools.PS-Survivor-Space.usage
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:241) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.856, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=pools.PS-Old-Gen.usage
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:241) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.857, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=pools.Code-Cache.usage
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:241) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.857, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=pools.PS-Survivor-Space.init
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:241) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.857, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=total.used
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:241) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.858, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=pools.Code-Cache.init
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:241) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.858, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=pools.PS-Old-Gen.committed
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:241) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.858, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=heap.init
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:241) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.859, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=non-heap.committed
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:241) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.859, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=pools.Compressed-Class-Space.committed
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:241) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.860, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=non-heap.init
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:241) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.860, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=pools.PS-Eden-Space.used
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:241) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.860, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=non-heap.usage
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:241) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.861, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=heap.max
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:241) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.861, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=pools.PS-Survivor-Space.used
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:241) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.861, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=pools.Metaspace.committed
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:241) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.862, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=total.max
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:241) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.862, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=pools.Metaspace.used
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:241) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.862, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=pools.Compressed-Class-Space.max
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:241) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.863, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=pools.PS-Survivor-Space.committed
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:241) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.863, loggingId=, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register gauge
javax.management.InstanceAlreadyExistsException: metrics:name=pools.PS-Old-Gen.used
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onGaugeAdded(JmxReporter.java:530) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:348) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:389) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.registerAll(MetricRegistry.java:104) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.DropwizardMetricsModule$Startup.onStart(DropwizardMetricsModule.java:241) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.service.internal.ServicesGraph$Node.lambda$start$2(ServicesGraph.java:304) [ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$new$0(DefaultExecution.java:79) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$InitialExecStream.exec(DefaultExecution.java:361) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.885, loggingId=, level=INFO , logger=ratpack.server.RatpackServer, message=Ratpack started (development) for http://localhost:56891
time=10:43:26.934, loggingId=29b376ad-463a-51d4-6959-fe6b3b39b4df, level=DEBUG, logger=com.codahale.metrics.JmxReporter, message=Unable to register counter
javax.management.InstanceAlreadyExistsException: metrics:name=2xx-responses
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:437) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerWithRepository(DefaultMBeanServerInterceptor.java:1898) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:966) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:900) ~[na:1.8.0_152]
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:324) ~[na:1.8.0_152]
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:522) ~[na:1.8.0_152]
	at com.codahale.metrics.JmxReporter$JmxListener.registerMBean(JmxReporter.java:505) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.JmxReporter$JmxListener.onCounterAdded(JmxReporter.java:556) ~[metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.notifyListenerOfAddedMetric(MetricRegistry.java:350) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.onMetricAdded(MetricRegistry.java:342) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.register(MetricRegistry.java:89) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.getOrAdd(MetricRegistry.java:317) [metrics-core-3.1.2.jar:3.1.2]
	at com.codahale.metrics.MetricRegistry.counter(MetricRegistry.java:115) [metrics-core-3.1.2.jar:3.1.2]
	at ratpack.dropwizard.metrics.internal.DefaultRequestTimingHandler.lambda$handle$0(DefaultRequestTimingHandler.java:47) [ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.server.internal.DefaultResponseTransmitter.notifyListeners(DefaultResponseTransmitter.java:337) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.server.internal.DefaultResponseTransmitter.lambda$null$7(DefaultResponseTransmitter.java:325) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.server.internal.DefaultResponseTransmitter.drainRequestBody(DefaultResponseTransmitter.java:96) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.server.internal.DefaultResponseTransmitter.lambda$post$8(DefaultResponseTransmitter.java:308) ~[ratpack-core-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:507) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:481) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:420) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.DefaultPromise.addListener(DefaultPromise.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:93) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:28) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.server.internal.DefaultResponseTransmitter.post(DefaultResponseTransmitter.java:307) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.server.internal.DefaultResponseTransmitter.lambda$transmit$4(DefaultResponseTransmitter.java:178) ~[ratpack-core-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:507) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:481) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:420) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.DefaultPromise.addListener(DefaultPromise.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:93) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.DefaultChannelPromise.addListener(DefaultChannelPromise.java:28) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.server.internal.DefaultResponseTransmitter.transmit(DefaultResponseTransmitter.java:172) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.server.internal.DefaultResponseTransmitter.transmit(DefaultResponseTransmitter.java:159) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.http.internal.DefaultResponse.lambda$commit$2(DefaultResponse.java:341) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.http.internal.DefaultResponse.finalizeResponse(DefaultResponse.java:363) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.http.internal.DefaultResponse.commit(DefaultResponse.java:339) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.http.internal.DefaultResponse.send(DefaultResponse.java:271) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.jackson.internal.JsonRenderer.render(JsonRenderer.java:66) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.jackson.internal.JsonRenderer.render(JsonRenderer.java:35) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.render.internal.DefaultRenderController.doRender(DefaultRenderController.java:69) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.render.internal.DefaultRenderController.doRender(DefaultRenderController.java:59) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.render.internal.DefaultRenderController.render(DefaultRenderController.java:40) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.handling.internal.DefaultContext.render(DefaultContext.java:236) ~[ratpack-core-1.5.1.jar:na]
	at smartthings.ratpack.httpadmin.HealthCheckResultsRenderer.render(HealthCheckResultsRenderer.java:36) ~[ratpack-http-admin-1.5.0.2.jar:na]
	at smartthings.ratpack.httpadmin.HealthCheckResultsRenderer.render(HealthCheckResultsRenderer.java:18) ~[ratpack-http-admin-1.5.0.2.jar:na]
	at ratpack.render.internal.DefaultRenderController.doRender(DefaultRenderController.java:69) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.render.internal.DefaultRenderController.doRender(DefaultRenderController.java:59) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.render.internal.DefaultRenderController.render(DefaultRenderController.java:40) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.handling.internal.DefaultContext.render(DefaultContext.java:236) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultPromise$1.success(DefaultPromise.java:45) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.Promise.lambda$null$8(Promise.java:223) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution$SingleEventExecStream.exec(DefaultExecution.java:430) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.exec(DefaultExecution.java:196) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:189) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.dropwizard.metrics.internal.DefaultBlockingExecTimingInterceptor.intercept(DefaultBlockingExecTimingInterceptor.java:62) ~[ratpack-dropwizard-metrics-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.lambda$intercept$4(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.logging.MDCInterceptor.intercept(MDCInterceptor.java:196) ~[ratpack-core-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.intercept(DefaultExecution.java:187) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.drain(DefaultExecution.java:169) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecution.<init>(DefaultExecution.java:93) ~[ratpack-exec-1.5.1.jar:na]
	at ratpack.exec.internal.DefaultExecController$1.lambda$start$0(DefaultExecController.java:195) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.PromiseTask.run(PromiseTask.java:73) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.AbstractEventExecutor.safeExecute(AbstractEventExecutor.java:163) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor.runAllTasks(SingleThreadEventExecutor.java:403) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:463) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at ratpack.exec.internal.DefaultExecController$ExecControllerBindingThreadFactory.lambda$newThread$0(DefaultExecController.java:136) ~[ratpack-exec-1.5.1.jar:na]
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_152]
time=10:43:26.948, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=stopping wiremock.org.eclipse.jetty.server.Server@3a1ccde0
time=10:43:26.949, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=stopping NetworkTrafficServerConnector@6a18c31a{HTTP/1.1}{0.0.0.0:0}
time=10:43:26.949, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=stopping wiremock.org.eclipse.jetty.server.ServerConnector$ServerConnectorManager@7184a63
time=10:43:26.949, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=stopping wiremock.org.eclipse.jetty.io.SelectorManager$ManagedSelector@7bedfe12 keys=0 selected=0
time=10:43:26.949, loggingId=, level=DEBUG, logger=w.o.eclipse.jetty.io.SelectorManager, message=Stopping wiremock.org.eclipse.jetty.io.SelectorManager$ManagedSelector@7bedfe12 keys=0 selected=0
time=10:43:26.949, loggingId=, level=DEBUG, logger=w.o.eclipse.jetty.io.SelectorManager, message=Queued change wiremock.org.eclipse.jetty.io.SelectorManager$ManagedSelector$Stop@210287cc
time=10:43:26.950, loggingId=, level=DEBUG, logger=w.o.eclipse.jetty.io.SelectorManager, message=Selector loop woken up from select, 0/0 selected
time=10:43:26.950, loggingId=, level=DEBUG, logger=w.o.eclipse.jetty.io.SelectorManager, message=Running change wiremock.org.eclipse.jetty.io.SelectorManager$ManagedSelector$Stop@210287cc
time=10:43:26.950, loggingId=, level=DEBUG, logger=w.o.eclipse.jetty.io.SelectorManager, message=Stopped wiremock.org.eclipse.jetty.io.SelectorManager$ManagedSelector@7bedfe12 keys=-1 selected=-1
time=10:43:26.950, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=STOPPED wiremock.org.eclipse.jetty.io.SelectorManager$ManagedSelector@7bedfe12 keys=-1 selected=-1
time=10:43:26.950, loggingId=, level=DEBUG, logger=w.o.eclipse.jetty.io.SelectorManager, message=Stopped Thread[qtp1349198170-218-selector-ServerConnectorManager@7184a63/0,5,main] on wiremock.org.eclipse.jetty.io.SelectorManager$ManagedSelector@7bedfe12 keys=-1 selected=-1
time=10:43:26.950, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=stopping wiremock.org.eclipse.jetty.io.SelectorManager$ManagedSelector@4e4516ee keys=0 selected=0
time=10:43:26.950, loggingId=, level=DEBUG, logger=w.o.eclipse.jetty.io.SelectorManager, message=Stopping wiremock.org.eclipse.jetty.io.SelectorManager$ManagedSelector@4e4516ee keys=0 selected=0
time=10:43:26.950, loggingId=, level=DEBUG, logger=w.o.eclipse.jetty.io.SelectorManager, message=Queued change wiremock.org.eclipse.jetty.io.SelectorManager$ManagedSelector$Stop@e19632a
time=10:43:26.950, loggingId=, level=DEBUG, logger=w.o.eclipse.jetty.io.SelectorManager, message=Selector loop woken up from select, 0/0 selected
time=10:43:26.950, loggingId=, level=DEBUG, logger=w.o.eclipse.jetty.io.SelectorManager, message=Running change wiremock.org.eclipse.jetty.io.SelectorManager$ManagedSelector$Stop@e19632a
time=10:43:26.950, loggingId=, level=DEBUG, logger=w.o.eclipse.jetty.io.SelectorManager, message=Stopped wiremock.org.eclipse.jetty.io.SelectorManager$ManagedSelector@4e4516ee keys=-1 selected=-1
time=10:43:26.951, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=STOPPED wiremock.org.eclipse.jetty.io.SelectorManager$ManagedSelector@4e4516ee keys=-1 selected=-1
time=10:43:26.951, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=STOPPED wiremock.org.eclipse.jetty.server.ServerConnector$ServerConnectorManager@7184a63
time=10:43:26.951, loggingId=, level=DEBUG, logger=w.o.eclipse.jetty.io.SelectorManager, message=Stopped Thread[qtp1349198170-219-selector-ServerConnectorManager@7184a63/1,5,main] on wiremock.org.eclipse.jetty.io.SelectorManager$ManagedSelector@4e4516ee keys=-1 selected=-1
time=10:43:26.951, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=stopping HttpConnectionFactory@707ba596{HTTP/1.1}
time=10:43:26.951, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=STOPPED HttpConnectionFactory@707ba596{HTTP/1.1}
time=10:43:26.951, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=stopping wiremock.org.eclipse.jetty.util.thread.ScheduledExecutorScheduler@36377bf1
time=10:43:26.951, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=STOPPED wiremock.org.eclipse.jetty.util.thread.ScheduledExecutorScheduler@36377bf1
time=10:43:26.951, loggingId=, level=INFO , logger=w.o.e.j.s.NetworkTrafficServerConnector, message=Stopped NetworkTrafficServerConnector@6a18c31a{HTTP/1.1}{0.0.0.0:0}
time=10:43:26.951, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=STOPPED NetworkTrafficServerConnector@6a18c31a{HTTP/1.1}{0.0.0.0:0}
time=10:43:26.951, loggingId=, level=DEBUG, logger=w.o.e.j.s.handler.AbstractHandler, message=stopping wiremock.org.eclipse.jetty.server.Server@3a1ccde0
time=10:43:26.951, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=stopping wiremock.org.eclipse.jetty.server.handler.HandlerCollection@6521d9f0[w.o.e.j.s.ServletContextHandler@a7d5182{/__admin,null,SHUTDOWN}, w.o.e.j.s.ServletContextHandler@7c7a987f{/,null,SHUTDOWN}]
time=10:43:26.951, loggingId=, level=DEBUG, logger=w.o.e.j.s.handler.AbstractHandler, message=stopping wiremock.org.eclipse.jetty.server.handler.HandlerCollection@6521d9f0[w.o.e.j.s.ServletContextHandler@a7d5182{/__admin,null,SHUTDOWN}, w.o.e.j.s.ServletContextHandler@7c7a987f{/,null,SHUTDOWN}]
time=10:43:26.951, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=stopping w.o.e.j.s.ServletContextHandler@7c7a987f{/,null,SHUTDOWN}
time=10:43:26.951, loggingId=, level=DEBUG, logger=w.o.e.j.s.handler.AbstractHandler, message=stopping w.o.e.j.s.ServletContextHandler@7c7a987f{/,null,UNAVAILABLE}
time=10:43:26.951, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=stopping wiremock.org.eclipse.jetty.servlet.ServletHandler@39c5a2a7
time=10:43:26.951, loggingId=, level=DEBUG, logger=w.o.e.j.s.handler.AbstractHandler, message=stopping wiremock.org.eclipse.jetty.servlet.ServletHandler@39c5a2a7
time=10:43:26.951, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=stopping com.github.tomakehurst.wiremock.servlet.TrailingSlashFilter-4c693ca4
time=10:43:26.951, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=STOPPED com.github.tomakehurst.wiremock.servlet.TrailingSlashFilter-4c693ca4
time=10:43:26.951, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=stopping com.github.tomakehurst.wiremock.servlet.ContentTypeSettingFilter-685a2bf4
time=10:43:26.951, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=STOPPED com.github.tomakehurst.wiremock.servlet.ContentTypeSettingFilter-685a2bf4
time=10:43:26.951, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=stopping wiremock.org.eclipse.jetty.servlets.GzipFilter-7c9e6e5a
time=10:43:26.951, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=STOPPED wiremock.org.eclipse.jetty.servlets.GzipFilter-7c9e6e5a
time=10:43:26.951, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=stopping com.github.tomakehurst.wiremock.servlet.WireMockHandlerDispatchingServlet-548fadd4@426a50e==com.github.tomakehurst.wiremock.servlet.WireMockHandlerDispatchingServlet,-1,false
time=10:43:26.951, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=STOPPED com.github.tomakehurst.wiremock.servlet.WireMockHandlerDispatchingServlet-548fadd4@426a50e==com.github.tomakehurst.wiremock.servlet.WireMockHandlerDispatchingServlet,-1,false
time=10:43:26.951, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=stopping wiremock.org.eclipse.jetty.servlet.DefaultServlet-49fdbd56@1669fd66==wiremock.org.eclipse.jetty.servlet.DefaultServlet,-1,false
time=10:43:26.951, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=STOPPED wiremock.org.eclipse.jetty.servlet.DefaultServlet-49fdbd56@1669fd66==wiremock.org.eclipse.jetty.servlet.DefaultServlet,-1,false
time=10:43:26.951, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=STOPPED wiremock.org.eclipse.jetty.servlet.ServletHandler@39c5a2a7
time=10:43:26.951, loggingId=, level=INFO , logger=w.o.e.j.s.handler.ContextHandler, message=Stopped w.o.e.j.s.ServletContextHandler@7c7a987f{/,null,UNAVAILABLE}
time=10:43:26.953, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=STOPPED w.o.e.j.s.ServletContextHandler@7c7a987f{/,null,UNAVAILABLE}
time=10:43:26.953, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=stopping w.o.e.j.s.ServletContextHandler@a7d5182{/__admin,null,SHUTDOWN}
time=10:43:26.954, loggingId=, level=DEBUG, logger=w.o.e.j.s.handler.AbstractHandler, message=stopping w.o.e.j.s.ServletContextHandler@a7d5182{/__admin,null,UNAVAILABLE}
time=10:43:26.954, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=stopping wiremock.org.eclipse.jetty.servlet.ServletHandler@26d153c4
time=10:43:26.954, loggingId=, level=DEBUG, logger=w.o.e.j.s.handler.AbstractHandler, message=stopping wiremock.org.eclipse.jetty.servlet.ServletHandler@26d153c4
time=10:43:26.954, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=stopping wiremock.org.eclipse.jetty.servlets.CrossOriginFilter-5099bedb
time=10:43:26.954, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=STOPPED wiremock.org.eclipse.jetty.servlets.CrossOriginFilter-5099bedb
time=10:43:26.955, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=stopping com.github.tomakehurst.wiremock.servlet.WireMockHandlerDispatchingServlet-30081819@5085e302==com.github.tomakehurst.wiremock.servlet.WireMockHandlerDispatchingServlet,-1,false
time=10:43:26.956, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=STOPPED com.github.tomakehurst.wiremock.servlet.WireMockHandlerDispatchingServlet-30081819@5085e302==com.github.tomakehurst.wiremock.servlet.WireMockHandlerDispatchingServlet,-1,false
time=10:43:26.956, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=stopping wiremock.org.eclipse.jetty.servlet.DefaultServlet-75860f98@2956beb1==wiremock.org.eclipse.jetty.servlet.DefaultServlet,-1,false
time=10:43:26.956, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=STOPPED wiremock.org.eclipse.jetty.servlet.DefaultServlet-75860f98@2956beb1==wiremock.org.eclipse.jetty.servlet.DefaultServlet,-1,false
time=10:43:26.957, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=STOPPED wiremock.org.eclipse.jetty.servlet.ServletHandler@26d153c4
time=10:43:26.957, loggingId=, level=INFO , logger=w.o.e.j.s.handler.ContextHandler, message=Stopped w.o.e.j.s.ServletContextHandler@a7d5182{/__admin,null,UNAVAILABLE}
time=10:43:26.957, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=STOPPED w.o.e.j.s.ServletContextHandler@a7d5182{/__admin,null,UNAVAILABLE}
time=10:43:26.957, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=STOPPED wiremock.org.eclipse.jetty.server.handler.HandlerCollection@6521d9f0[w.o.e.j.s.ServletContextHandler@a7d5182{/__admin,null,UNAVAILABLE}, w.o.e.j.s.ServletContextHandler@7c7a987f{/,null,UNAVAILABLE}]
time=10:43:26.957, loggingId=, level=DEBUG, logger=w.o.e.j.u.c.AbstractLifeCycle, message=stopping qtp1349198170{STARTED,8<=8<=10,i=8,q=0}
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
