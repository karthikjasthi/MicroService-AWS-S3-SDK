buildscript {
	repositories {
		jcenter()
	}
	dependencies {
		classpath 'com.github.ben-manes:gradle-versions-plugin:0.17.0'
	}
}

def jvmEncoding = java.nio.charset.Charset.defaultCharset().name()
if (jvmEncoding != "UTF-8") {
	throw new IllegalStateException("Build environment must be UTF-8 (it is: $jvmEncoding) - add '-Dfile.encoding=UTF-8' to the GRADLE_OPTS environment variable ")
}

if (!JavaVersion.current().java8Compatible) {
	throw new IllegalStateException("Must be built with Java 8 or higher")
}

subprojects {
	group 'smartthings'
	version = rootProject.file('version.txt').text.trim()

	buildscript {
		repositories {
			jcenter()
			mavenCentral()
			maven {
				url 'https://plugins.gradle.org/m2/'
			}
			mavenLocal()
		}
		dependencies {
			classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.3'
			classpath "gradle.plugin.io.ratpack:ratpack-gradle:${ratpackVersion}"
		}
	}

	repositories {
		mavenLocal()
		jcenter()
		maven {
			credentials {
				username smartThingsUserName
				password smartThingsPassword
			}
			url "https://smartthings.jfrog.io/smartthings/libs-release-local"
		}
		maven {
			credentials {
				username smartThingsUserName
				password smartThingsPassword
			}
			url "https://smartthings.jfrog.io/smartthings/libs-snapshot-local"
		}
		maven {
			url "http://dl.bintray.com/smartthingsoss/maven"
		}
	}
}

def groovyProjects = [
		':amnesty-web',
		':amnesty-functional-test',
		':amnesty-load-test'
].collect { project(it) }

configure groovyProjects, {
	apply plugin: 'com.github.ben-manes.versions'
}

task checkProjects {
	dependsOn ':amnesty-web:check',
			':amnesty-web:jacocoTestReport',
			':amnesty-functional-test:compileTestGroovy',
			':amnesty-load-test:check'
}
